import telebot
from telebot import types
import requests

bot = telebot.TeleBot('7614311120:AAHTssIxJXZJRx1vHKQM8AYCtCmA0pCQkag')

# –í–∞—à API-–∫–ª—é—á
API_KEY = "e0950540-1f74-401e-b424-771f7556568f"

# –ë–∞–∑–æ–≤—ã–π URL API
BASE_URL = "https://api.airvisual.com/v2"

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –æ –∫–∞—á–µ—Å—Ç–≤–µ –≤–æ–∑–¥—É—Ö–∞ –≤ –≥–æ—Ä–æ–¥–µ
def get_city_air_quality(city, state, country):
    url = f"{BASE_URL}/city"
    params = {
        "city": city,
        "state": state,
        "country": country,
        "key": API_KEY,
    }
    try:
        response = requests.get(url, params=params)
        response.raise_for_status()  # –ü—Ä–æ–≤–µ—Ä—è–µ–º —É—Å–ø–µ—à–Ω–æ—Å—Ç—å –∑–∞–ø—Ä–æ—Å–∞
        data = response.json()
        
        if "data" in data:
            pollution = data["data"]["current"]["pollution"]
            weather = data["data"]["current"]["weather"]

            # –ü–µ—Ä–µ–≤–æ–¥ –¥–∞–≤–ª–µ–Ω–∏—è –≤ –º–º —Ä—Ç. —Å—Ç.
            pressure_mm_hg = weather['pr'] * 0.75006375541921

            return (
                f"–ö–∞—á–µ—Å—Ç–≤–æ –≤–æ–∑–¥—É—Ö–∞ –≤ –≥–æ—Ä–æ–¥–µ {city}, {state}, {country}:\n"
                f"- AQI(–ò–Ω–¥–µ–∫—Å –∫–∞—á–µ—Å—Ç–≤–∞ –≤–æ–∑–¥—É—Ö–∞) (–†–æ—Å—Å–∏—è): {pollution['aqius']}\n"
                f"- –û—Å–Ω–æ–≤–Ω–æ–π –∑–∞–≥—Ä—è–∑–Ω–∏—Ç–µ–ª—å: {pollution['mainus']}\n"
                f"- –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: {weather['tp']}¬∞C\n"
                f"- –î–∞–≤–ª–µ–Ω–∏–µ: {pressure_mm_hg:.2f} –º–º —Ä—Ç. —Å—Ç.\n"
                f"- –í–ª–∞–∂–Ω–æ—Å—Ç—å: {weather['hu']}%"
            )
        else:
            return f"–û—à–∏–±–∫–∞: {data.get('message', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞')}"
    except requests.exceptions.RequestException as e:
        return f"–û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞: {e}"


@bot.message_handler(commands=['start'])
def qwizz(message):
    markup = types.InlineKeyboardMarkup()
    start = types.InlineKeyboardButton(text="üîç –ù–∞—á–∞—Ç—å –≤–∏–∫—Ç–æ—Ä–∏–Ω—É", callback_data="start1")
    markup.add(start)
    bot.send_message(message.chat.id, "–ü—Ä–∏–≤–µ—Ç, —è –±–æ—Ç-–ø–æ–º–æ—â–Ω–∏–∫ –ø–æ —ç–∫–æ–ª–æ–≥–∏–∏. –ß—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å, –ø—Ä–æ–π–¥–∏ —Ç–µ—Å—Ç –Ω–∞ –∑–Ω–∞–Ω–∏–µ –ø–µ—Ä–µ—Ä–∞–±–æ—Ç–∫–∏ –º—É—Å–æ—Ä–∞", reply_markup=markup)

# –ü–µ—Ä–≤—ã–π –≤–æ–ø—Ä–æ—Å 
@bot.callback_query_handler(func=lambda call: call.data == 'start1')
def q1(call):
    markup = types.InlineKeyboardMarkup()
    q1_1 = types.InlineKeyboardButton(text="1", callback_data="q1_1")
    q1_2 = types.InlineKeyboardButton(text="2", callback_data="q1_2")
    q1_3 = types.InlineKeyboardButton(text="3", callback_data="q1_3")
    markup.add(q1_1, q1_2, q1_3)
    bot.send_message(call.message.chat.id, "–ü–µ—Ä–≤—ã–π –≤–æ–ø—Ä–æ—Å: \n–ß—Ç–æ, –≤ –æ—Å–Ω–æ–≤–Ω–æ–º, –ø—Ä–æ–∏–∑–≤–æ–¥—è—Ç –∏–∑ –ø–µ—Ä–µ—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã—Ö –ø–ª–∞—Å—Ç–∏–∫–æ–≤—ã—Ö –±—É—Ç—ã–ª–æ–∫?\n\n1. –ù–æ–≤—ã–µ –ø–ª–∞—Å—Ç–∏–∫–æ–≤—ã–µ –±—É—Ç—ã–ª–∫–∏\n2. –ú—è–≥–∫–∏–µ –∏–≥—Ä—É—à–∫–∏\n3. –û–¥–µ–∂–¥—É (—Ñ—É—Ç–±–æ–ª–∫–∏, —Å–≤–∏—Ç–µ—Ä–∞, –∫–æ—Å—Ç—é–º–∞ –∏–∑ —Å–∏–Ω—Ç–µ—Ç–∏—á–µ—Å–∫–∏—Ö –≤–æ–ª–æ–∫–æ–Ω, –¥–∞–∂–µ —Å–ø–∞–ª—å–Ω—ã–µ –º–µ—à–∫–∏)", reply_markup=markup)



# –ü–µ—Ä–≤—ã–π –≤–æ–ø—Ä–æ—Å –Ω–µ–ø—Ä–∞–≤–∏–ª–Ω—ã–π –æ—Ç–≤–µ—Ç
@bot.callback_query_handler(func=lambda call: call.data == 'q1_2')
def q1_2_w(call):
    bot.send_message(call.message.chat.id, "–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ‚ùå –ü–æ–ø—Ä–æ–±—É–π –µ—â—ë")
    bot.register_next_step_handler(call.message, q1)



# –ü–µ—Ä–≤—ã–π –≤–æ–ø—Ä–æ—Å –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç
@bot.callback_query_handler(func=lambda call: call.data == 'q1_1')
def q1_3_w(call):
    bot.send_message(call.message.chat.id, "–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ‚ùå –ü–æ–ø—Ä–æ–±—É–π –µ—â—ë")
    bot.register_next_step_handler(call.message, q1)





# –í—Ç–æ—Ä–æ–π –≤–æ–ø—Ä–æ—Å
@bot.callback_query_handler(func=lambda call: call.data == 'q1_3')
def q2(call):
    bot.delete_message(call.message.chat.id, call.message.message_id)
    markup = types.InlineKeyboardMarkup()
    q2_1 = types.InlineKeyboardButton(text="1", callback_data="q2_1")
    q2_2 = types.InlineKeyboardButton(text="2", callback_data="q2_2")
    q2_3 = types.InlineKeyboardButton(text="3", callback_data="q2_3")
    bot.send_message(call.message.chat.id, "–ü—Ä–∞–≤–∏–ª—å–Ω–æ‚úÖ")
    markup.add(q2_1, q2_2, q2_3)
    bot.send_message(call.message.chat.id, "–í—Ç–æ—Ä–æ–π –≤–æ–ø—Ä–æ—Å: \n–ö–∞–∫–æ–π –º—É—Å–æ—Ä —Å—á–∏—Ç–∞–µ—Ç—Å—è —Å–∞–º—ã–º —Ä–∞—Å–ø—Ä–æ—Å—Ç—Ä–∞–Ω–µ–Ω–Ω—ã–º (–ø–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤—É –µ–¥–∏–Ω–∏—Ü) –Ω–∞ –ó–µ–º–ª–µ?\n\n1. –°–∏–≥–∞—Ä–µ—Ç–Ω—ã–µ –æ–∫—É—Ä–∫–∏\n2. –ü–æ–ª–∏—ç—Ç–∏–ª–µ–Ω–æ–≤—ã–µ –ø–∞–∫–µ—Ç—ã\n3. –ê–≤—Ç–æ–º–æ–±–∏–ª—å–Ω—ã–µ –ø–æ–∫—Ä—ã—à–∫–∏", reply_markup=markup)



# –í—Ç–æ—Ä–æ–π –≤–æ–ø—Ä–æ—Å –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç
@bot.callback_query_handler(func=lambda call: call.data == 'q2_2')
def q2_2_w(call):
    bot.send_message(call.message.chat.id, "–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ‚ùå –ü–æ–ø—Ä–æ–±—É–π –µ—â—ë")
    bot.register_next_step_handler(call.message, q2)



# –í—Ç–æ—Ä–æ–π –≤–æ–ø—Ä–æ—Å –Ω–µ–ø—Ä–∞–≤–∏–ª–Ω—ã–π –æ—Ç–≤–µ—Ç
@bot.callback_query_handler(func=lambda call: call.data == 'q2_3')
def q2_3_w(call):
    bot.send_message(call.message.chat.id, "–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ‚ùå –ü–æ–ø—Ä–æ–±—É–π –µ—â—ë")
    bot.register_next_step_handler(call.message, q2)





# –¢—Ä–µ—Ç–∏–π –≤–æ–ø—Ä–æ—Å
@bot.callback_query_handler(func=lambda call: call.data == 'q2_1')
def q3(call):
    bot.delete_message(call.message.chat.id, call.message.message_id)
    markup = types.InlineKeyboardMarkup()
    q3_1 = types.InlineKeyboardButton(text="1", callback_data="q3_1")
    q3_2 = types.InlineKeyboardButton(text="2", callback_data="q3_2")
    q3_3 = types.InlineKeyboardButton(text="3", callback_data="q3_3")
    bot.send_message(call.message.chat.id, "–ü—Ä–∞–≤–∏–ª—å–Ω–æ‚úÖ")
    markup.add(q3_1, q3_2, q3_3)
    bot.send_message(call.message.chat.id, "–¢—Ä–µ—Ç–∏–π –≤–æ–ø—Ä–æ—Å: \n–°–∫–æ–ª—å–∫–æ –∫–∏–ª–æ–≥—Ä–∞–º–º–æ–≤ –º—É—Å–æ—Ä–∞ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç —Å—Ä–µ–¥–Ω–µ—Å—Ç–∞—Ç–∏—Å—Ç–∏—á–µ—Å–∫–∏–π —á–µ–ª–æ–≤–µ–∫ –∑–∞ –≥–æ–¥?\n\n1. 120–∫–≥\n2. 340–∫–≥ \n3. 38–∫–≥", reply_markup=markup)



# –¢—Ä–µ—Ç–∏–π –≤–æ–ø—Ä–æ—Å –Ω–µ–ø—Ä–∞–≤–∏–ª–Ω—ã–π –æ—Ç–≤–µ—Ç
@bot.callback_query_handler(func=lambda call: call.data == 'q3_1')
def q3_1_w(call):
    bot.send_message(call.message.chat.id, "–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ‚ùå –ü–æ–ø—Ä–æ–±—É–π –µ—â—ë")
    bot.register_next_step_handler(call.message, q3)


# –¢—Ä–µ—Ç–∏–π –≤–æ–ø—Ä–æ—Å –Ω–µ–ø—Ä–∞–≤–∏–ª–Ω—ã–π –æ—Ç–≤–µ—Ç
@bot.callback_query_handler(func=lambda call: call.data == 'q3_3')
def q3_3_w(call):
    bot.send_message(call.message.chat.id, "–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ‚ùå –ü–æ–ø—Ä–æ–±—É–π –µ—â—ë")
    bot.register_next_step_handler(call.message, q3)

@bot.callback_query_handler(func=lambda call: call.data == 'q3_2')
def q3_2(call):
    city = "Moscow"
    state = "Moscow"
    country = "Russia"
    bot.delete_message(call.message.chat.id, call.message.message_id)
    bot.send_message(call.message.chat.id, "–ü–æ–∑–¥—Ä–∞–≤–ª—è—é, –í—ã –ø—Ä–æ—à–ª–∏ –≤–∏–∫—Ç–æ—Ä–∏–Ω—É!üéâ")
    bot.send_message(call.message.chat.id, "–≠—Ç–æ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∑–∞–≥—Ä—è–∑–Ω–µ–Ω–∏—è —Å—Ç–æ–ª–∏—Ü—ã –†–æ—Å—Å–∏–∏:")
    # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ API
    air_quality_info = get_city_air_quality(city, state, country)
    bot.send_message(call.message.chat.id, air_quality_info)
    markup = types.InlineKeyboardMarkup()
    help_1 = types.InlineKeyboardButton(text="üçÉ–ü–æ–º–æ—á—å", callback_data="help")
    markup.add(help_1)
    bot.send_message(call.message.chat.id, "–•–æ—Ç–∏—Ç–µ –ø–æ–º–æ—á—å –ø—Ä–∏—Ä–æ–¥–µ?", reply_markup=markup)

@bot.callback_query_handler(func=lambda call: call.data == 'help')
def helpp(call):
    bot.send_message(call.message.chat.id, "–í–æ—Ç –Ω–µ—Å–∫–æ–ª—å–∫–æ —Å–ø–æ—Å–æ–±–æ–≤, –∫–∞–∫ –ø–æ–º–æ—á—å –ø—Ä–∏—Ä–æ–¥–µ:\n\n\n1. –°–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –º—É—Å–æ—Ä - –Ω–∞–ø—Ä–∏–º–µ—Ä, —Å—Ç–∞—Ä—ã–µ –≤–µ—â–∏ –º–æ–∂–Ω–æ –æ—Ç–¥–∞–≤–∞—Ç—å –Ω–∞ –±–ª–∞–≥–æ—Ç–≤–æ—Ä–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å, –∞ –±—É–º–∞–≥—É –∫–æ–ø–∏—Ç—å –∏ —Å–¥–∞–≤–∞—Ç—å –≤ –ø—É–Ω–∫—Ç—ã –ø—Ä–∏—ë–º–∞ –º–∞–∫—É–ª–∞—Ç—É—Ä—ã.\n\n2. –û—Ç–∫–∞–∑–∞—Ç—å—Å—è –æ—Ç –ø–ª–∞—Å—Ç–∏–∫–∞ - –º–æ–∂–Ω–æ –∑–∞–º–µ–Ω–∏—Ç—å –æ–±—ã—á–Ω—ã–µ –ø–∞–∫–µ—Ç—ã –Ω–∞ –º–Ω–æ–≥–æ—Ä–∞–∑–æ–≤—ã–µ —Å—É–º–∫–∏-—à–æ–ø–ø–µ—Ä—ã, –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∫–∞—Ä—Ç–æ–Ω–Ω—É—é –æ–¥–Ω–æ—Ä–∞–∑–æ–≤—É—é –ø–æ—Å—É–¥—É, –æ—Ç–¥–∞—Ç—å –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏–µ –º–Ω–æ–≥–æ—Ä–∞–∑–æ–≤–æ–π –±—É—Ç—ã–ª–∫–µ –¥–ª—è –≤–æ–¥—ã.\n\n3. –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ –±–∞—Ç–∞—Ä–µ–π–∫–∏ - —Ö–∏–º–∏—á–µ—Å–∫–∏–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã, –≤—Ö–æ–¥—è—â–∏–µ –≤ —Å–æ—Å—Ç–∞–≤ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –ø–∏—Ç–∞–Ω–∏—è, –Ω–∞–Ω–æ—Å—è—Ç –≤—Ä–µ–¥ –æ–∫—Ä—É–∂–∞—é—â–µ–π —Å—Ä–µ–¥–µ. –ë–∞—Ç–∞—Ä–µ–π–∫–∏ –Ω—É–∂–Ω–æ —Å–¥–∞–≤–∞—Ç—å –≤ —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–π –ø—É–Ω–∫—Ç –ø—Ä–∏—ë–º–∞.\n\n4.–ü—Ä–∏–Ω—è—Ç—å —É—á–∞—Å—Ç–∏–µ –≤ –æ–∑–µ–ª–µ–Ω–µ–Ω–∏–∏ - —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –º–Ω–æ–∂–µ—Å—Ç–≤–æ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–π –ø–æ –æ–∑–µ–ª–µ–Ω–µ–Ω–∏—é –ø–∞—Ä–∫–æ–≤ –∏ —Å–∫–≤–µ—Ä–æ–≤, –≤ –∫–æ—Ç–æ—Ä—ã—Ö –º–æ–∂–Ω–æ –ø—Ä–∏–Ω—è—Ç—å —É—á–∞—Å—Ç–∏–µ.\n\n5. –ú–µ–Ω—å—à–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –ª–∏—á–Ω—ã–º –∞–≤—Ç–æ, –µ–∑–¥–∏—Ç—å –Ω–∞ –≤–µ–ª–æ—Å–∏–ø–µ–¥–µ - –Ω–µ –æ—Å—Ç–∞–≤–ª—è—Ç—å –∞–≤—Ç–æ–º–æ–±–∏–ª—å –∑–∞–≤–µ–¥—ë–Ω–Ω—ã–º –ø—Ä–æ—Å—Ç–æ —Ç–∞–∫, —Ö–æ–¥–∏—Ç—å –¥–æ –º–∞–≥–∞–∑–∏–Ω–∞ –∏–ª–∏ —Ä–∞–±–æ—Ç—ã –ø–µ—à–∫–æ–º, —Ö–æ—Ç—è –±—ã –≤ —Ö–æ—Ä–æ—à—É—é –ø–æ–≥–æ–¥—É, –æ—Ç–¥–∞–≤–∞—Ç—å –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏–µ –æ–±—â–µ—Å—Ç–≤–µ–Ω–Ω–æ–º—É —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç—É.")
    bot.send_message(call.message.chat.id, "–ï—Å–ª–∏ –Ω—É–∂–Ω–∞ –±—É–¥–µ—Ç –ø–æ–º–æ—â—å, –ø—Ä–æ–ø–∏—à–∏ /help\n–£–¥–∞—á–∏ –≤ —Å—É–ø–µ—Ä–≥–µ—Ä–æ–π—Å—Ç–≤–µ)üçÄ")

@bot.callback_query_handler(func=lambda call: call.data == 'help2')
def helppp(call):
    bot.send_message(call.message.chat.id, "–í–æ—Ç –Ω–µ—Å–∫–æ–ª—å–∫–æ —Å–ø–æ—Å–æ–±–æ–≤, –∫–∞–∫ –ø–æ–º–æ—á—å –ø—Ä–∏—Ä–æ–¥–µ:\n\n\n1. –°–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –º—É—Å–æ—Ä - –Ω–∞–ø—Ä–∏–º–µ—Ä, —Å—Ç–∞—Ä—ã–µ –≤–µ—â–∏ –º–æ–∂–Ω–æ –æ—Ç–¥–∞–≤–∞—Ç—å –Ω–∞ –±–ª–∞–≥–æ—Ç–≤–æ—Ä–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å, –∞ –±—É–º–∞–≥—É –∫–æ–ø–∏—Ç—å –∏ —Å–¥–∞–≤–∞—Ç—å –≤ –ø—É–Ω–∫—Ç—ã –ø—Ä–∏—ë–º–∞ –º–∞–∫—É–ª–∞—Ç—É—Ä—ã.\n\n2. –û—Ç–∫–∞–∑–∞—Ç—å—Å—è –æ—Ç –ø–ª–∞—Å—Ç–∏–∫–∞ - –º–æ–∂–Ω–æ –∑–∞–º–µ–Ω–∏—Ç—å –æ–±—ã—á–Ω—ã–µ –ø–∞–∫–µ—Ç—ã –Ω–∞ –º–Ω–æ–≥–æ—Ä–∞–∑–æ–≤—ã–µ —Å—É–º–∫–∏-—à–æ–ø–ø–µ—Ä—ã, –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∫–∞—Ä—Ç–æ–Ω–Ω—É—é –æ–¥–Ω–æ—Ä–∞–∑–æ–≤—É—é –ø–æ—Å—É–¥—É, –æ—Ç–¥–∞—Ç—å –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏–µ –º–Ω–æ–≥–æ—Ä–∞–∑–æ–≤–æ–π –±—É—Ç—ã–ª–∫–µ –¥–ª—è –≤–æ–¥—ã.\n\n3. –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ –±–∞—Ç–∞—Ä–µ–π–∫–∏ - —Ö–∏–º–∏—á–µ—Å–∫–∏–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã, –≤—Ö–æ–¥—è—â–∏–µ –≤ —Å–æ—Å—Ç–∞–≤ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –ø–∏—Ç–∞–Ω–∏—è, –Ω–∞–Ω–æ—Å—è—Ç –≤—Ä–µ–¥ –æ–∫—Ä—É–∂–∞—é—â–µ–π —Å—Ä–µ–¥–µ. –ë–∞—Ç–∞—Ä–µ–π–∫–∏ –Ω—É–∂–Ω–æ —Å–¥–∞–≤–∞—Ç—å –≤ —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–π –ø—É–Ω–∫—Ç –ø—Ä–∏—ë–º–∞.\n\n4.–ü—Ä–∏–Ω—è—Ç—å —É—á–∞—Å—Ç–∏–µ –≤ –æ–∑–µ–ª–µ–Ω–µ–Ω–∏–∏ - —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –º–Ω–æ–∂–µ—Å—Ç–≤–æ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–π –ø–æ –æ–∑–µ–ª–µ–Ω–µ–Ω–∏—é –ø–∞—Ä–∫–æ–≤ –∏ —Å–∫–≤–µ—Ä–æ–≤, –≤ –∫–æ—Ç–æ—Ä—ã—Ö –º–æ–∂–Ω–æ –ø—Ä–∏–Ω—è—Ç—å —É—á–∞—Å—Ç–∏–µ.\n\n5. –ú–µ–Ω—å—à–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –ª–∏—á–Ω—ã–º –∞–≤—Ç–æ, –µ–∑–¥–∏—Ç—å –Ω–∞ –≤–µ–ª–æ—Å–∏–ø–µ–¥–µ - –Ω–µ –æ—Å—Ç–∞–≤–ª—è—Ç—å –∞–≤—Ç–æ–º–æ–±–∏–ª—å –∑–∞–≤–µ–¥—ë–Ω–Ω—ã–º –ø—Ä–æ—Å—Ç–æ —Ç–∞–∫, —Ö–æ–¥–∏—Ç—å –¥–æ –º–∞–≥–∞–∑–∏–Ω–∞ –∏–ª–∏ —Ä–∞–±–æ—Ç—ã –ø–µ—à–∫–æ–º, —Ö–æ—Ç—è –±—ã –≤ —Ö–æ—Ä–æ—à—É—é –ø–æ–≥–æ–¥—É, –æ—Ç–¥–∞–≤–∞—Ç—å –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏–µ –æ–±—â–µ—Å—Ç–≤–µ–Ω–Ω–æ–º—É —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç—É.")

@bot.message_handler(commands=['help'])
def hhelp(message):
    markup = types.InlineKeyboardMarkup()
    h1 = types.InlineKeyboardButton(text="1", callback_data="help2")
    h2 = types.InlineKeyboardButton(text="2", callback_data="air_quality")
    h3 = types.InlineKeyboardButton(text="3", callback_data="start1")
    markup.add(h1, h2, h3)
    bot.send_message(message.chat.id, "–ó–¥—Ä–∞—Å—Ç–≤—É–π—Ç–µ! –ß–µ–º —è –º–æ–≥—É –ø–æ–º–æ—á—å?\n\n1. –£–∑–Ω–∞—Ç—å —Å–ø–æ—Å–æ–±—ã –ø–æ–º–æ—á—å –ø—Ä–∏—Ä–æ–¥–µ\n2. –£–∑–Ω–∞—Ç—å –∫–∞—á–µ—Å—Ç–≤–æ –≤–æ–∑–¥—É—Ö–∞ –≤ –ú–æ—Å–∫–≤–µ\n3. –ü—Ä–æ–π—Ç–∏ –≤–∏–∫—Ç–æ—Ä–∏–Ω—É", reply_markup=markup)

@bot.callback_query_handler(func=lambda call: call.data == 'air_quality')
def air_quality(call):
    city = "Moscow"
    state = "Moscow"
    country = "Russia"
    # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ API
    air_quality_info = get_city_air_quality(city, state, country)
    bot.send_message(call.message.chat.id, air_quality_info)

bot.polling(none_stop=True)
print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω...")
